Changes in the Cubes
++++++++++++++++++++

Version 0.8a
============

* Changed initialization of model classes: Model, Cube, Dimension, Hierarchy, Level to be more "pythony":
  instead of using initialization dictionary, each attribute is listed as parameter, rest is handled from
  variable list of key word arguments
* Improved handling of flat and detail-less dimensions (dimensions represented just by one attribute which
  is also a key)

Model Initialization Defaults:

* If no levels are specified during initialization, then dimension name is considered flat, with single
  attribute.
* If no hierarchy is specified and levels are specified, then default hierarchy will be created from order
  of levels
* If no levels are specified, then one level is created, with name `default` and dimension will be
  considered flat

Note: This initialization defaults might be moved into a separate utility function/class that will populate
incomplete model

Slicer Server:

* in aggregate drill-down: explicit dimension can be specified with drilldown=dimension:level, such as:
  date:month

Version 0.7
===========

WARNING: Minor backward API incompatibility - Cuboid renamed to Cell. 

Changes
-------
* Class 'Cuboid' was renamed to more correct 'Cell'. 'Cuboid' is a part of cube with subset of
  dimensions.
* all APIs with 'cuboid' in their name/arguments were renamed to use 'cell' instead

New features
------------

Slicer server:
* changed to handle multiple cubes within model: you have to specify a cube for /aggregate, /facts,... in form: /cube/<cube_name>/<browser_action>
* reflect change in configuration: removed ``view``, added ``view_prefix`` and ``view_suffix``, the cube view name will be constructed by concatenating `view prefix` + `cube name` + `view suffix`

This change is considered final and therefore we can mark it is as API version 1.


Version 0.6
===========

New features
------------

Cubes:

* added 'details' to cube - attributes that might contain fact details which are not relevant to
  aggregation, but might be interesting when displaying facts
* added ordering of facts in aggregation browser
* SQL denormalizer can now add indexes to key columns, if requested
* one detail table can be used more than once in SQL denomralizer (such as an organisation for both -
  receiver and donor), added key ``alias`` to ``joins`` in model description

Slicer server:

* added ``log`` a and ``log_level`` configuration options (under ``[server]``)
* added ``format=`` parameter to ``/facts``, accepts ``json`` and ``csv``
* added ``fields=`` parameter to ``/facts`` - comma separated list of returned fields in CSV
* share single sqlalchemy engine within server thread
* limit number of facts returned in JSON (configurable by ``json_record_limit`` in ``[server]`` section)

Experimental:
(might change or be removed, use with caution)

* added cubes searching frontend for separate cubes_search experimenal Sphinx backend (see
  https://bitbucket.org/Stiivi/cubes-search)

Fixes
-----

* fixed localization bug in fact(s) - now uses proper attribute name without locale suffix
* fixed passing of pagination and ordering parameters from server to aggregation browser when
  requesting facts
* fixed bug when using multiple conditions in SQL aggregator
* make host/port optional separately
